rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // PHASE 4: Full Security (Based on working rules but simplified)
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserId() {
      return request.auth.uid;
    }
    
    // Simplified: Get family_id from user document only (no custom claims dependency)
    function getUserFamilyId() {
      return get(/databases/$(database)/documents/users/$(getUserId())).data.family_id;
    }
    
    function getUserType() {
      return get(/databases/$(database)/documents/users/$(getUserId())).data.user_type;
    }
    
    function isParent() {
      return getUserType() == 'parent';
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (
        userId == getUserId() ||
        (getUserFamilyId() != null && 
         getUserFamilyId() == get(/databases/$(database)/documents/users/$(userId)).data.family_id)
      );
      
      allow create: if isAuthenticated() && userId == getUserId();
      allow update: if isAuthenticated() && userId == getUserId();
    }
    
    // Families collection
    match /families/{familyId} {
      allow read: if isAuthenticated() && getUserFamilyId() == familyId;
      allow write: if isAuthenticated() && isParent() && getUserFamilyId() == familyId;
    }
    
    // Messages collection
    match /messages/{messageId} {
      allow read: if isAuthenticated() && 
        getUserFamilyId() != null &&
        getUserFamilyId() == resource.data.family_id;
        
      allow create: if isAuthenticated() && 
        getUserFamilyId() != null &&
        getUserFamilyId() == request.resource.data.family_id &&
        getUserId() == request.resource.data.sender_id;
        
      allow update: if isAuthenticated() && 
        getUserId() == resource.data.sender_id;
    }
    
    // Support requests collection
    match /support_requests/{requestId} {
      allow read: if isAuthenticated() && 
        getUserFamilyId() != null &&
        getUserFamilyId() == resource.data.family_id;
        
      allow create: if isAuthenticated() && 
        getUserFamilyId() != null &&
        getUserFamilyId() == request.resource.data.family_id;
        
      allow update: if isAuthenticated() && 
        getUserFamilyId() != null &&
        getUserFamilyId() == resource.data.family_id;
    }
    
    // Wellness entries collection
    match /wellness_entries/{entryId} {
      allow read: if isAuthenticated() && (
        getUserId() == resource.data.user_id ||
        (getUserFamilyId() != null && getUserFamilyId() == resource.data.family_id)
      );
      
      allow create: if isAuthenticated() && 
        getUserId() == request.resource.data.user_id &&
        getUserFamilyId() == request.resource.data.family_id;
        
      allow update: if isAuthenticated() && 
        getUserId() == resource.data.user_id;
    }
    
    // XP/Progress collection - SERVER ONLY
    match /user_progress/{userId} {
      allow read: if isAuthenticated() && userId == getUserId();
      allow write: if false; // Only Cloud Functions can write
    }
    
    // Payments collection - CRITICAL SECURITY
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && 
        getUserFamilyId() != null &&
        getUserFamilyId() == resource.data.family_id;
        
      allow create: if isAuthenticated() && 
        isParent() &&
        getUserFamilyId() != null &&
        getUserFamilyId() == request.resource.data.family_id &&
        getUserId() == request.resource.data.parent_id;
        
      allow update: if false; // Only Cloud Functions can update payments
    }
    
    // Family join requests
    match /family_join_requests/{requestId} {
      allow read: if isAuthenticated() && 
        isParent() &&
        getUserFamilyId() != null &&
        getUserFamilyId() == resource.data.family_id;
        
      allow create: if isAuthenticated() && 
        getUserId() == request.resource.data.student_id;
        
      allow write: if isAuthenticated() && 
        isParent() &&
        getUserFamilyId() != null &&
        getUserFamilyId() == resource.data.family_id;
    }
    
    // Push tokens
    match /push_tokens/{tokenId} {
      allow read, write: if isAuthenticated() && tokenId == getUserId();
    }
    
    // Subscriptions collection - CRITICAL SECURITY
    match /subscriptions/{subscriptionId} {
      allow read: if isAuthenticated() && 
        getUserFamilyId() != null &&
        getUserFamilyId() == resource.data.family_id;
        
      allow create: if isAuthenticated() && 
        isParent() &&
        getUserFamilyId() != null &&
        getUserFamilyId() == request.resource.data.family_id &&
        getUserId() == request.resource.data.user_id;
        
      allow update: if false; // Only Cloud Functions can update subscriptions
    }
    
    // Monthly spend collection - Family financial data
    match /monthly_spend/{spendId} {
      allow read: if isAuthenticated() && 
        getUserFamilyId() != null &&
        getUserFamilyId() == resource.data.family_id;
        
      allow write: if false; // Only Cloud Functions can manage spend tracking
    }
    
    // Transactions collection - CRITICAL FINANCIAL SECURITY
    match /transactions/{transactionId} {
      allow read: if isAuthenticated() && 
        getUserFamilyId() != null &&
        getUserFamilyId() == resource.data.family_id;
        
      allow create: if isAuthenticated() && 
        getUserFamilyId() != null &&
        getUserFamilyId() == request.resource.data.family_id &&
        (getUserId() == request.resource.data.parent_id || 
         getUserId() == request.resource.data.student_id);
        
      allow update: if false; // Only Cloud Functions can update transactions
    }
    
    // Rewards collection - Student achievements
    match /rewards/{rewardId} {
      allow read: if isAuthenticated() && (
        getUserId() == resource.data.user_id ||
        (getUserFamilyId() != null && getUserFamilyId() == resource.data.family_id)
      );
      
      allow create: if isAuthenticated() && 
        getUserId() == request.resource.data.user_id &&
        getUserFamilyId() == request.resource.data.family_id;
        
      allow update: if false; // Only Cloud Functions can update rewards
    }
    
    // Notification history - System notifications (server only)
    match /notification_history/{notificationId} {
      allow read: if isAuthenticated() && 
        getUserId() == resource.data.user_id;
        
      allow write: if false; // Only Cloud Functions can manage notifications
    }
    
    // Verification tokens - Server functions only (email/password reset)
    match /verification_tokens/{tokenId} {
      allow read, write: if false; // Only server functions have access
    }
  }
}